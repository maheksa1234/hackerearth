Binary search is the most popular Search algorithm.It is efficient and also one of the most commonly used techniques that is used to solve problems.

If all the names in the world are written down together in order and you want to search for the position of a specific name, binary search will accomplish this in a maximum of  iterations.

Binary search works only on a sorted set of elements. To use binary search on a collection, the collection must first be sorted.

When binary search is used to perform operations on a sorted set, the number of iterations can always be reduced on the basis of the value that is being searched.

Let us consider the following array:
int binary(long long int a[], int n, long long int x)
{
int low=0, high=n-1, mid;

while(low <= high)
{
mid = low+(high-low)/2;
if(a[mid] == x)
return mid+1;
else if(a[mid] > x)
high = mid-1;
else if(a[mid] < x)
low = mid+1;
}
return -1;
}
void insertion(long long int a[], int n)
{
int i, j, key;
for(i=1; i<n; i++)
{
int j=i-1, key = a[i];
while(j>=0 && key < a[j])
a[j+1] = a[j--];
a[j+1] = key;
}

}
int main()
{
int n, q, i;
scanf("%d",&n);
long long int a[n], x;
for(i=0; i<n; i++)
scanf("%lld",&a[i]);
insertion(a, n);
scanf("%d",&q);
while(q--)
{
scanf("%lld",&x);
printf("%d\n",binary(a, n, x));
}
}